
(declare-const v_main_cmp4_3_1 Bool)
(declare-const v_f_fv_12_6_1 Int)
(declare-const v_g_fv_19_3_1 Int)
(declare-const TR_main_2_3 Bool)
(declare-const AB_main_3 Bool)
(declare-const TR_main_3_4 Bool)
(declare-const v_main_cmp4_2_1 Bool)
(declare-const v_main_cmp4_0_0 Bool)
(declare-const TR_main_0_2 Bool)
(declare-const fv_22 Bool)
(declare-const TR_main_1_2 Bool)
(declare-const v_main_tobool2_2_0 Bool)
(declare-const v_main_fv_0_2_0 Bool)
(declare-const v_main_fv_0_1_1 Bool)
(declare-const v_main_tobool2_1_1 Bool)
(declare-const v_main_fv_0_0_1 Bool)
(declare-const v_main_tobool2_0_1 Bool)
(declare-const AB_main_2 Bool)
(declare-const v_g_GL_success_c_3_1 Int)
(declare-const TR_main_2_4 Bool)
(declare-const v_g_GL_success_b_3_1 Int)
(declare-const TR_main_0_1 Bool)
(declare-const AB_main_1 Bool)
(declare-const v_main_tobool2_0_0 Bool)
(declare-const sqc_a_main_fv_1 Int)
(declare-const v_f_a_0_0 Int)
(declare-const v_f_GL_f_end_sqc_0_0 Int)
(declare-const v_f_GL_f_input_sqc_0_0 Int)
(declare-const v_f_GL_f_start_sqc_0_0 Int)
(declare-const v_f_GL_g_duration_sqc_0_0 Int)
(declare-const v_f_GL_g_input_sqc_0_0 Int)
(declare-const v_f_GL_success_a_0_0 Int)
(declare-const v_f_GL_success_b_0_0 Int)
(declare-const v_f_GL_success_c_0_0 Int)
(declare-const v_main_ME_0_0 (Array Int Int))
(declare-const v_f_ME_0_0 (Array Int Int))
(declare-const AB_f_6 Bool)
(declare-const AB_f_0 Bool)
(declare-fun psqc1_a (Int) Int)
(declare-const TR_f_0_2 Bool)
(declare-const TR_f_0_1 Bool)
(declare-const v_f_GL_f_end_sqc_1_1 Int)
(declare-const v_f_GL_success_b_1_1 Int)
(declare-const AB_f_1 Bool)
(declare-const TR_f_1_5 Bool)
(declare-const AB_f_2 Bool)
(declare-fun psqc1_b (Int) Int)
(declare-const TR_f_2_4 Bool)
(declare-const TR_f_2_3 Bool)
(declare-const v_f_GL_f_end_sqc_3_1 Int)
(declare-fun sqc2_b (Int Int) Int)
(declare-const v_f_GL_success_b_3_1 Int)
(declare-const AB_f_3 Bool)
(declare-const TR_f_3_5 Bool)
(declare-const v_f_GL_f_end_sqc_4_1 Int)
(declare-const v_f_GL_success_b_4_1 Int)
(declare-const v_f_retval_4_1 Int)
(declare-fun sqc2_a (Int Int) Int)
(declare-const AB_f_4 Bool)
(declare-const TR_f_4_6 Bool)
(declare-const v_f_GL_f_end_sqc_5_1 Int)
(declare-const v_f_GL_f_end_sqc_5_0 Int)
(declare-const v_f_GL_success_b_5_1 Int)
(declare-const v_f_GL_success_b_5_0 Int)
(declare-const v_f_retval_5_1 Int)
(declare-const AB_f_5 Bool)
(declare-const TR_f_5_6 Bool)
(declare-const v_f_GL_f_end_sqc_6_1 Int)
(declare-const v_f_GL_f_end_sqc_6_0 Int)
(declare-const v_f_GL_f_input_sqc_6_1 Int)
(declare-const v_f_GL_f_start_sqc_6_1 Int)
(declare-const v_f_GL_g_duration_sqc_6_1 Int)
(declare-const v_f_GL_g_input_sqc_6_1 Int)
(declare-const v_f_GL_success_a_6_1 Int)
(declare-const v_f_GL_success_b_6_1 Int)
(declare-const v_f_GL_success_b_6_0 Int)
(declare-const v_f_GL_success_c_6_1 Int)
(declare-const v_f_ME_6_1 (Array Int Int))
(declare-const v_f_a_6_1 Int)
(declare-const v_f_retval_6_0 Int)
(declare-const v_f_retval_6_1 Int)
(declare-const v_g_a_0_0 Int)
(declare-const v_g_GL_f_end_sqc_0_0 Int)
(declare-const v_g_GL_f_input_sqc_0_0 Int)
(declare-const v_g_GL_f_start_sqc_0_0 Int)
(declare-const v_g_GL_g_duration_sqc_0_0 Int)
(declare-const v_g_GL_g_input_sqc_0_0 Int)
(declare-const v_g_GL_success_a_0_0 Int)
(declare-const v_g_GL_success_b_0_0 Int)
(declare-const v_g_GL_success_c_0_0 Int)
(declare-const v_g_ME_0_0 (Array Int Int))
(declare-const AB_g_3 Bool)
(declare-const AB_g_0 Bool)
(declare-fun psqc1_c (Int) Int)
(declare-const TR_g_0_2 Bool)
(declare-const TR_g_0_1 Bool)
(declare-const v_g_retval_1_1 Int)
(declare-const AB_g_1 Bool)
(declare-const TR_g_1_3 Bool)
(declare-const v_g_retval_2_1 Int)
(declare-fun sqc2_c (Int Int) Int)
(declare-const AB_g_2 Bool)
(declare-const TR_g_2_3 Bool)
(declare-const v_g_GL_f_end_sqc_3_1 Int)
(declare-const v_g_GL_f_input_sqc_3_1 Int)
(declare-const v_g_GL_f_start_sqc_3_1 Int)
(declare-const v_g_GL_g_duration_sqc_3_1 Int)
(declare-const v_g_GL_g_input_sqc_3_1 Int)
(declare-const v_g_GL_success_a_3_1 Int)
(declare-const v_g_ME_3_1 (Array Int Int))
(declare-const v_g_a_3_1 Int)
(declare-const v_g_retval_3_0 Int)
(declare-const v_g_retval_3_1 Int)
(declare-const AB_main_0 Bool)
(declare-const v_main_cmp4_4_0 Bool)
(declare-const v_main_fv_1_4_0 Bool)
(declare-const v_main_fv_1_3_1 Bool)
(declare-const v_main_fv_1_2_1 Bool)
(declare-const AB_main_4 Bool)
(declare-const fv_26 Bool)
(assert (let ((a!1 (and (not (not (= 0 v_g_GL_success_a_3_1))) AB_main_0))
      (a!2 (or (not TR_main_0_1)
               (and (not (= 0 v_g_GL_success_a_3_1)) AB_main_0)))
      (a!3 (not (and (not (= 0 v_g_GL_success_a_3_1)) AB_main_0)))
      (a!4 (not (not (= 0 (psqc1_c v_g_a_0_0)))))
      (a!5 (and (not (= 0 (psqc1_c v_g_a_0_0))) AB_g_0))
      (a!6 (not (not (= 0 (psqc1_b v_f_a_0_0)))))
      (a!7 (and (not (= 0 (psqc1_b v_f_a_0_0))) AB_f_2))
      (a!8 (not (not (= 0 (psqc1_a v_f_a_0_0)))))
      (a!9 (and (not (= 0 (psqc1_a v_f_a_0_0))) AB_f_0))
      (a!10 (and (not (= v_g_GL_success_c_3_1 (ite fv_22 1 0))) AB_main_2))
      (a!11 (or (not TR_main_2_3)
                (and (= v_g_GL_success_c_3_1 (ite fv_22 1 0)) AB_main_2)))
      (a!12 (not (and (= v_g_GL_success_c_3_1 (ite fv_22 1 0)) AB_main_2))))
  (and (or (= v_main_cmp4_4_0 fv_26) (not TR_main_3_4))
       (or (= false fv_26) (not TR_main_2_4))
       AB_main_4
       (or (not AB_main_4) (or TR_main_2_4 TR_main_3_4))
       (or AB_main_4 (not (or TR_main_2_4 TR_main_3_4)))
       (or (and (= v_main_fv_1_2_1 v_main_fv_1_4_0)
                (= v_main_cmp4_2_1 v_main_cmp4_4_0))
           (not TR_main_2_4))
       (or (and (= v_main_fv_1_3_1 v_main_fv_1_4_0)
                (= v_main_cmp4_3_1 v_main_cmp4_4_0))
           (not TR_main_3_4))
       (or (not AB_main_0) (or TR_main_0_2 TR_main_0_1))
       (or AB_main_0 (not (or TR_main_0_2 TR_main_0_1)))
       (or (not TR_main_0_2) a!1)
       (or TR_main_0_2 (not a!1))
       a!2
       (or TR_main_0_1 a!3)
       AB_main_0
       (or (not AB_g_3) (or TR_g_2_3 TR_g_1_3))
       (or AB_g_3 (not (or TR_g_2_3 TR_g_1_3)))
       (or (= v_g_retval_2_1 v_g_retval_3_0) (not TR_g_2_3))
       (or (= v_g_retval_1_1 v_g_retval_3_0) (not TR_g_1_3))
       (= v_g_retval_3_0 v_g_retval_3_1)
       (= v_g_retval_3_0 v_g_fv_19_3_1)
       (= v_g_a_0_0 v_g_a_3_1)
       (= v_g_ME_0_0 v_g_ME_3_1)
       (= (psqc1_c v_g_a_0_0) v_g_GL_success_c_3_1)
       (= v_g_GL_success_b_0_0 v_g_GL_success_b_3_1)
       (= v_g_GL_success_a_0_0 v_g_GL_success_a_3_1)
       (= v_g_a_0_0 v_g_GL_g_input_sqc_3_1)
       (= (sqc2_c 0 v_g_a_0_0) v_g_GL_g_duration_sqc_3_1)
       (= v_g_GL_f_start_sqc_0_0 v_g_GL_f_start_sqc_3_1)
       (= v_g_GL_f_input_sqc_0_0 v_g_GL_f_input_sqc_3_1)
       (= v_g_GL_f_end_sqc_0_0 v_g_GL_f_end_sqc_3_1)
       (or (not TR_g_2_3) AB_g_2)
       (or TR_g_2_3 (not AB_g_2))
       (or (not AB_g_2) TR_g_0_2)
       (or AB_g_2 (not TR_g_0_2))
       (= (sqc2_c 0 v_g_a_0_0) v_g_retval_2_1)
       (or (not TR_g_1_3) AB_g_1)
       (or TR_g_1_3 (not AB_g_1))
       (or (not AB_g_1) TR_g_0_1)
       (or AB_g_1 (not TR_g_0_1))
       (= (- 1) v_g_retval_1_1)
       (or (not AB_g_0) (or TR_g_0_1 TR_g_0_2))
       (or AB_g_0 (not (or TR_g_0_1 TR_g_0_2)))
       (or (not TR_g_0_1) (and a!4 AB_g_0))
       (or TR_g_0_1 (not (and a!4 AB_g_0)))
       (or (not TR_g_0_2) a!5)
       (or TR_g_0_2 (not a!5))
       AB_g_0
       AB_g_3
       (= v_g_ME_0_0 v_f_ME_6_1)
       (= v_g_GL_success_c_0_0 v_f_GL_success_c_6_1)
       (= v_g_GL_success_b_0_0 v_f_GL_success_b_6_1)
       (= v_g_GL_success_a_0_0 v_f_GL_success_a_6_1)
       (= v_g_GL_g_input_sqc_0_0 v_f_GL_g_input_sqc_6_1)
       (= v_g_GL_g_duration_sqc_0_0 v_f_GL_g_duration_sqc_6_1)
       (= v_g_GL_f_start_sqc_0_0 v_f_GL_f_start_sqc_6_1)
       (= v_g_GL_f_input_sqc_0_0 v_f_GL_f_input_sqc_6_1)
       (= v_g_GL_f_end_sqc_0_0 v_f_GL_f_end_sqc_6_1)
       (= v_g_a_0_0 sqc_a_main_fv_1)
       (or (not AB_f_6) (or TR_f_4_6 TR_f_5_6))
       (or AB_f_6 (not (or TR_f_4_6 TR_f_5_6)))
       (or (and (= v_f_retval_4_1 v_f_retval_6_0)
                (= v_f_GL_success_b_4_1 v_f_GL_success_b_6_0)
                (= v_f_GL_f_end_sqc_4_1 v_f_GL_f_end_sqc_6_0))
           (not TR_f_4_6))
       (or (and (= v_f_retval_5_1 v_f_retval_6_0)
                (= v_f_GL_success_b_5_1 v_f_GL_success_b_6_0)
                (= v_f_GL_f_end_sqc_5_1 v_f_GL_f_end_sqc_6_0))
           (not TR_f_5_6))
       (= v_f_retval_6_0 v_f_retval_6_1)
       (= v_f_retval_6_0 v_f_fv_12_6_1)
       (= v_f_a_0_0 v_f_a_6_1)
       (= v_f_ME_0_0 v_f_ME_6_1)
       (= v_f_GL_success_c_0_0 v_f_GL_success_c_6_1)
       (= v_f_GL_success_b_6_0 v_f_GL_success_b_6_1)
       (= (psqc1_a v_f_a_0_0) v_f_GL_success_a_6_1)
       (= v_f_GL_g_input_sqc_0_0 v_f_GL_g_input_sqc_6_1)
       (= v_f_GL_g_duration_sqc_0_0 v_f_GL_g_duration_sqc_6_1)
       (= (sqc2_a 0 v_f_a_0_0) v_f_GL_f_start_sqc_6_1)
       (= v_f_a_0_0 v_f_GL_f_input_sqc_6_1)
       (= v_f_GL_f_end_sqc_6_0 v_f_GL_f_end_sqc_6_1)
       (or (not TR_f_5_6) AB_f_5)
       (or TR_f_5_6 (not AB_f_5))
       (or (not AB_f_5) (or TR_f_1_5 TR_f_3_5))
       (or AB_f_5 (not (or TR_f_1_5 TR_f_3_5)))
       (or (and (= v_f_GL_success_b_1_1 v_f_GL_success_b_5_0)
                (= v_f_GL_f_end_sqc_1_1 v_f_GL_f_end_sqc_5_0))
           (not TR_f_1_5))
       (or (and (= v_f_GL_success_b_3_1 v_f_GL_success_b_5_0)
                (= v_f_GL_f_end_sqc_3_1 v_f_GL_f_end_sqc_5_0))
           (not TR_f_3_5))
       (= (- 1) v_f_retval_5_1)
       (= v_f_GL_success_b_5_0 v_f_GL_success_b_5_1)
       (= v_f_GL_f_end_sqc_5_0 v_f_GL_f_end_sqc_5_1)
       (or (not TR_f_4_6) AB_f_4)
       (or TR_f_4_6 (not AB_f_4))
       (or (not AB_f_4) TR_f_2_4)
       (or AB_f_4 (not TR_f_2_4))
       (= (- (sqc2_b 0 v_f_a_0_0) (sqc2_a 0 v_f_a_0_0)) v_f_retval_4_1)
       (= (psqc1_b v_f_a_0_0) v_f_GL_success_b_4_1)
       (= (sqc2_b 0 v_f_a_0_0) v_f_GL_f_end_sqc_4_1)
       (or (not TR_f_3_5) AB_f_3)
       (or TR_f_3_5 (not AB_f_3))
       (or (not AB_f_3) TR_f_2_3)
       (or AB_f_3 (not TR_f_2_3))
       (= (psqc1_b v_f_a_0_0) v_f_GL_success_b_3_1)
       (= (sqc2_b 0 v_f_a_0_0) v_f_GL_f_end_sqc_3_1)
       (or (not AB_f_2) (or TR_f_2_3 TR_f_2_4))
       (or AB_f_2 (not (or TR_f_2_3 TR_f_2_4)))
       (or (not TR_f_2_3) (and a!6 AB_f_2))
       (or TR_f_2_3 (not (and a!6 AB_f_2)))
       (or (not TR_f_2_4) a!7)
       (or TR_f_2_4 (not a!7))
       (or (not AB_f_2) TR_f_0_2)
       (or AB_f_2 (not TR_f_0_2))
       (or (not TR_f_1_5) AB_f_1)
       (or TR_f_1_5 (not AB_f_1))
       (or (not AB_f_1) TR_f_0_1)
       (or AB_f_1 (not TR_f_0_1))
       (= v_f_GL_success_b_0_0 v_f_GL_success_b_1_1)
       (= v_f_GL_f_end_sqc_0_0 v_f_GL_f_end_sqc_1_1)
       (or (not AB_f_0) (or TR_f_0_1 TR_f_0_2))
       (or AB_f_0 (not (or TR_f_0_1 TR_f_0_2)))
       (or (not TR_f_0_1) (and a!8 AB_f_0))
       (or TR_f_0_1 (not (and a!8 AB_f_0)))
       (or (not TR_f_0_2) a!9)
       (or TR_f_0_2 (not a!9))
       AB_f_0
       AB_f_6
       (= v_f_ME_0_0 v_main_ME_0_0)
       (= v_f_GL_success_c_0_0 0)
       (= v_f_GL_success_b_0_0 0)
       (= v_f_GL_success_a_0_0 0)
       (= v_f_GL_g_input_sqc_0_0 0)
       (= v_f_GL_g_duration_sqc_0_0 0)
       (= v_f_GL_f_start_sqc_0_0 0)
       (= v_f_GL_f_input_sqc_0_0 0)
       (= v_f_GL_f_end_sqc_0_0 0)
       (= v_f_a_0_0 sqc_a_main_fv_1)
       (= v_main_tobool2_0_0 v_main_tobool2_0_1)
       (or (not TR_main_1_2) AB_main_1)
       (or TR_main_1_2 (not AB_main_1))
       (or (not AB_main_1) TR_main_0_1)
       (or AB_main_1 (not TR_main_0_1))
       (= (not (= 0 v_g_GL_success_b_3_1)) v_main_tobool2_1_1)
       (or (not AB_main_2) (or TR_main_2_4 TR_main_2_3))
       (or AB_main_2 (not (or TR_main_2_4 TR_main_2_3)))
       (or (not TR_main_2_4) a!10)
       (or TR_main_2_4 (not a!10))
       a!11
       (or TR_main_2_3 a!12)
       (or (not AB_main_2) (or TR_main_0_2 TR_main_1_2))
       (or AB_main_2 (not (or TR_main_0_2 TR_main_1_2)))
       (or (and (= v_main_tobool2_0_1 v_main_tobool2_2_0)
                (= v_main_fv_0_0_1 v_main_fv_0_2_0))
           (not TR_main_0_2))
       (or (and (= v_main_tobool2_1_1 v_main_tobool2_2_0)
                (= v_main_fv_0_1_1 v_main_fv_0_2_0))
           (not TR_main_1_2))
       (or (= v_main_tobool2_2_0 fv_22) (not TR_main_1_2))
       (or (= false fv_22) (not TR_main_0_2))
       (= v_main_cmp4_0_0 v_main_cmp4_2_1)
       (or (not TR_main_3_4) AB_main_3)
       (or TR_main_3_4 (not AB_main_3))
       (or (not AB_main_3) TR_main_2_3)
       (or AB_main_3 (not TR_main_2_3))
       (= (= v_g_fv_19_3_1 v_f_fv_12_6_1) v_main_cmp4_3_1))))
(assert (not fv_26))

;-------------------------------------

(declare-sort Tabela 0)
(declare-const employee Tabela)
(declare-sort Red 0)

(declare-fun e_emp_id (Red Tabela) Int)
(declare-fun e_end_date (Red Tabela) Int)
(declare-fun e_start_date (Red Tabela) Int)

(declare-const _f_a_input_sqc Int)
(declare-const _f_a_start_sqc Int)
(declare-const _f_b_end_sqc Int)
(declare-const _f_b_input_sqc Int)
(declare-const _g_c_duration_sqc Int)
(declare-const _g_c_input_sqc Int)



(assert (or (= (psqc1_a _f_a_input_sqc) 0) (= (psqc1_a _f_a_input_sqc) 1)))
(assert (or (= (psqc1_b _f_b_input_sqc) 0) (= (psqc1_b _f_b_input_sqc) 1)))
(assert (or (= (psqc1_c _g_c_input_sqc) 0) (= (psqc1_c _g_c_input_sqc) 1)))

(assert (= (= (psqc1_a _f_a_input_sqc) 1) (and (exists ((r Red))(= (e_emp_id r employee) _f_a_input_sqc)) (forall ((r1 Red)(r2 Red)) (=> (and (= (e_emp_id r1 employee) _f_a_input_sqc)(= (e_emp_id r2 employee) _f_a_input_sqc))(= r1 r2))))))
(assert (= (= (psqc1_b _f_b_input_sqc) 1) (and (exists ((r Red))(= (e_emp_id r employee) _f_b_input_sqc)) (forall ((r1 Red)(r2 Red)) (=> (and (= (e_emp_id r1 employee) _f_b_input_sqc)(= (e_emp_id r2 employee) _f_b_input_sqc))(= r1 r2))))))
(assert (= (= (psqc1_c _g_c_input_sqc) 1) (and (exists ((r Red))(= (e_emp_id r employee) _g_c_input_sqc)) (forall ((r1 Red)(r2 Red)) (=> (and (= (e_emp_id r1 employee) _g_c_input_sqc)(= (e_emp_id r2 employee) _g_c_input_sqc))(= r1 r2))))))

(assert (=> (and (= (psqc1_a _f_a_input_sqc) 1)(= (sqc2_a 0 _f_a_input_sqc) _f_a_start_sqc)) (exists ((r Red))(and (= (e_emp_id r employee) _f_a_input_sqc)(= (e_start_date r employee) _f_a_start_sqc)))))
(assert (=> (and (= (psqc1_b _f_b_input_sqc) 1)(= (sqc2_b 0 _f_b_input_sqc) _f_b_end_sqc)) (exists ((r Red))(and (= (e_emp_id r employee) _f_b_input_sqc)(= (e_end_date r employee) _f_b_end_sqc)))))
(assert (=> (and (= (psqc1_c _g_c_input_sqc) 1)(= (sqc2_c 0 _g_c_input_sqc) _g_c_duration_sqc)) (exists ((r Red)(c0 Int)(c1 Int))(and (= (e_emp_id r employee) _g_c_input_sqc)(= (e_end_date r employee) c0)(= (e_start_date r employee) c1)(= _g_c_duration_sqc (- c0 c1))))))

(assert (= _f_a_start_sqc (sqc2_a 0 v_f_a_0_0)))
(assert (= _f_b_input_sqc v_f_a_0_0))
(assert (= _g_c_input_sqc v_g_a_0_0))
(assert (= _f_b_end_sqc (sqc2_b 0 v_f_a_0_0)))
(assert (= _f_a_input_sqc v_f_a_0_0))
(assert (= _g_c_duration_sqc (sqc2_c 0 v_g_a_0_0)))



;-------------------------------------

(check-sat)

;-------------------------------------
;(assert fv_26)
;(check-sat)
